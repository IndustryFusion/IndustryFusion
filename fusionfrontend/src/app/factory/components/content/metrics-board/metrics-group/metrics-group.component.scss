/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

@import "base/typography";
@import "abstract/variables";

$metric-small-height: var(--metric-small-height);
$metric-large-height: var(--metric-large-height);
$metric-margin-y: var(--metric-margin-y);

.caption {
  display: flex;
  color: $basic-black;
  font-size: $bigger-font-size;
  font-weight: bold;
  margin-top: 3rem;
  margin-right: 2rem;
  margin-left: 2rem;
  margin-bottom: 1rem;
}

.metrics-board {

  margin: 1rem 2rem;
  width: 100%;
  display: flex;
  flex-wrap: wrap;

  .performance-widget {
    width: 22%;
    height: $metric-small-height;
    background: $basic-white 0 0 no-repeat padding-box;
    border-radius: 10px;
    &:not(:last-child) {
      margin-right: 16px;
      margin-bottom: 16px;
    }

    .metric-container {
      border: 0;
      margin: $metric-margin-y 2.5rem;

      .progress-bar-container {
        display: block !important;
      }

      .metric-value-container {
        display: flex;
        align-self: center;
      }

      .metric-title {
        text-align: left;
        font-size: $medium-font-size;
        line-height: $medium-line-height;
        letter-spacing: 0;
        color: $regular-grey;
      }

      .metric-value {
        text-align: left;
        font-size: $huge-font-size;
        line-height: $huge-line-height;
        font-weight: bold;
        letter-spacing: 0;
        color: $basic-black;
      }

      .metric-unit {
        text-align: left;
        font-size: $even-bigger-font-size;
        line-height: $much-bigger-line-height;
        letter-spacing: 0;
        color: $inactive-infotext;

        align-self: center;
        padding-left: 0.5rem;
      }
    }
  }

  .performance-widget-large {
    @extend .performance-widget;
    height: $metric-large-height !important;
  }
}

app-metrics-group {
  --metrics-masonry-height: 14rem;
}

.fake-masonry {
  display: flex;
  flex-flow: column wrap;
  align-content: flex-start;
  width: 100%;
}

/* TODO (IF-492): Only Quick solution to set height per component */
.fake-masonry-1 {
  height: var(--metrics-masonry-height-1);
}

.fake-masonry-2 {
  height: var(--metrics-masonry-height-2);
}

.fake-masonry-3 {
  height: var(--metrics-masonry-height-3);
}

.fake-masonry-4 {
  height: var(--metrics-masonry-height-4);
}

.fake-masonry-5 {
  height: var(--metrics-masonry-height-5);
}

.fake-masonry-6 {
  height: var(--metrics-masonry-height-6);
}

.fake-masonry-7 {
  height: var(--metrics-masonry-height-7);
}

.fake-masonry-8 {
  height: var(--metrics-masonry-height-8);
}

.fake-masonry-9 {
  height: var(--metrics-masonry-height-9);
}

.fake-masonry-10 {
  height: var(--metrics-masonry-height-10);
}

.fake-masonry::before,
.fake-masonry::after {
  content: "";
  width: 0;
  order: 3;
}

:host ::ng-deep .maintenance-value {
  padding-top: 8px !important;
}
