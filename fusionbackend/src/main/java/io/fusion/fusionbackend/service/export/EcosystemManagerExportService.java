/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package io.fusion.fusionbackend.service.export;

import io.fusion.fusionbackend.service.AssetTypeTemplateService;
import io.fusion.fusionbackend.service.FieldService;
import io.fusion.fusionbackend.service.UnitService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;

@Service
@Transactional
public class EcosystemManagerExportService {
    private final AssetTypeTemplateService assetTypeTemplateService;
    private final FieldService fieldService;
    private final UnitService unitService;

    private static final String FILE_COMMENT = "autogenerated by industry fusion server";

    @Autowired
    public EcosystemManagerExportService(AssetTypeTemplateService assetTypeTemplateService,
                                         FieldService fieldService,
                                         UnitService unitService) {
        this.assetTypeTemplateService = assetTypeTemplateService;
        this.fieldService = fieldService;
        this.unitService = unitService;
    }

    public void getEntitiesDtoExtendedZip(final OutputStream responseOutputStream) throws IOException {
        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
        try (ZipOutputStream zipOutputStream = new ZipOutputStream(byteArrayOutputStream)) {

            addFileToZipOutputStream(zipOutputStream, "PublishedAssetTypeTemplates.json",
                    assetTypeTemplateService.getAllAssetTypeTemplateDtosExtendedJson());

            addFileToZipOutputStream(zipOutputStream, "Fields.json",
                    fieldService.getAllFieldDtosExtendedJson());

            addFileToZipOutputStream(zipOutputStream, "Units.json",
                    unitService.getAllUnitDtosExtendedJson());

        } catch (IOException ioe) {
            ioe.printStackTrace();
            throw new IOException(ioe.getMessage());
        }

        responseOutputStream.write(byteArrayOutputStream.toByteArray());
        responseOutputStream.close();
    }

    private void addFileToZipOutputStream(final ZipOutputStream zipOutputStream,
                                          final String filename,
                                          final byte[] data) throws IOException {
        ZipEntry entry = new ZipEntry(filename);
        entry.setComment(FILE_COMMENT);
        zipOutputStream.putNextEntry(entry);
        zipOutputStream.write(data);
    }
}
